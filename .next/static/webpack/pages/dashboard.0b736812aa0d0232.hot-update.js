"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/dashboard",{

/***/ "./src/utils/index.ts":
/*!****************************!*\
  !*** ./src/utils/index.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calculateLength\": function() { return /* binding */ calculateLength; },\n/* harmony export */   \"convertAudioToBlob\": function() { return /* binding */ convertAudioToBlob; },\n/* harmony export */   \"formatTime\": function() { return /* binding */ formatTime; },\n/* harmony export */   \"randomRange\": function() { return /* binding */ randomRange; }\n/* harmony export */ });\nconst randomRange = (start, end)=>{\n    return Math.floor(Math.random() * (end - start)) + start;\n};\nconst calculateLength = (time)=>{\n    const timeStr = formatTime(time).split(\":\");\n    const minutes = timeStr[1];\n    const seconds = timeStr[2];\n    const length = \"\".concat(minutes, \"m:\").concat(seconds, \"s\");\n    return length;\n};\nconst formatTime = (time)=>{\n    const hours = Math.floor(time / 3600);\n    const minutes = Math.floor(time % 3600 / 60);\n    const seconds = time % 60;\n    const formattedHours = String(hours).padStart(2, \"0\");\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n    return \"\".concat(formattedHours, \":\").concat(formattedMinutes, \":\").concat(formattedSeconds);\n};\nconst convertAudioToBlob = async (file)=>{\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    return new Promise((resolve, reject)=>{\n        reader.onload = ()=>{\n            const arrayBuffer = reader.result;\n            const audioBlob = new Blob([\n                arrayBuffer\n            ], {\n                type: file.type\n            });\n            resolve(audioBlob);\n        };\n        reader.onerror = reject;\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLE1BQU1BLGNBQWMsQ0FBQ0MsT0FBZUMsTUFBZ0I7SUFDekQsT0FBT0MsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxNQUFNLEtBQU1ILENBQUFBLE1BQU1ELEtBQUksS0FBTUE7QUFDckQsRUFBRTtBQUVLLE1BQU1LLGtCQUFrQixDQUFDQyxPQUF5QjtJQUN2RCxNQUFNQyxVQUFVQyxXQUFXRixNQUFNRyxLQUFLLENBQUM7SUFDdkMsTUFBTUMsVUFBVUgsT0FBTyxDQUFDLEVBQUU7SUFDMUIsTUFBTUksVUFBVUosT0FBTyxDQUFDLEVBQUU7SUFFMUIsTUFBTUssU0FBUyxHQUFlRCxPQUFaRCxTQUFRLE1BQVksT0FBUkMsU0FBUTtJQUN0QyxPQUFPQztBQUNULEVBQUU7QUFFSyxNQUFNSixhQUFhLENBQUNGLE9BQXlCO0lBQ2xELE1BQU1PLFFBQVFYLEtBQUtDLEtBQUssQ0FBQ0csT0FBTztJQUNoQyxNQUFNSSxVQUFVUixLQUFLQyxLQUFLLENBQUMsT0FBUSxPQUFRO0lBQzNDLE1BQU1RLFVBQVVMLE9BQU87SUFFdkIsTUFBTVEsaUJBQWlCQyxPQUFPRixPQUFPRyxRQUFRLENBQUMsR0FBRztJQUNqRCxNQUFNQyxtQkFBbUJGLE9BQU9MLFNBQVNNLFFBQVEsQ0FBQyxHQUFHO0lBQ3JELE1BQU1FLG1CQUFtQkgsT0FBT0osU0FBU0ssUUFBUSxDQUFDLEdBQUc7SUFFckQsT0FBTyxHQUFxQkMsT0FBbEJILGdCQUFlLEtBQXVCSSxPQUFwQkQsa0JBQWlCLEtBQW9CLE9BQWpCQztBQUNsRCxFQUFFO0FBRUssTUFBTUMscUJBQXFCLE9BQU9DLE9BQThCO0lBQ3JFLE1BQU1DLFNBQVMsSUFBSUM7SUFDbkJELE9BQU9FLGlCQUFpQixDQUFDSDtJQUV6QixPQUFPLElBQUlJLFFBQVEsQ0FBQ0MsU0FBU0MsU0FBVztRQUN0Q0wsT0FBT00sTUFBTSxHQUFHLElBQU07WUFDcEIsTUFBTUMsY0FBY1AsT0FBT1EsTUFBTTtZQUNqQyxNQUFNQyxZQUFZLElBQUlDLEtBQUs7Z0JBQUNIO2FBQVksRUFBRTtnQkFBRUksTUFBTVosS0FBS1ksSUFBSTtZQUFDO1lBQzVEUCxRQUFRSztRQUNWO1FBRUFULE9BQU9ZLE9BQU8sR0FBR1A7SUFDbkI7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9pbmRleC50cz9hY2E5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCByYW5kb21SYW5nZSA9IChzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcikgPT4ge1xuICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGVuZCAtIHN0YXJ0KSkgKyBzdGFydDtcbn07XG5cbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVMZW5ndGggPSAodGltZTogbnVtYmVyKTogc3RyaW5nID0+IHtcbiAgY29uc3QgdGltZVN0ciA9IGZvcm1hdFRpbWUodGltZSkuc3BsaXQoXCI6XCIpO1xuICBjb25zdCBtaW51dGVzID0gdGltZVN0clsxXTtcbiAgY29uc3Qgc2Vjb25kcyA9IHRpbWVTdHJbMl07XG5cbiAgY29uc3QgbGVuZ3RoID0gYCR7bWludXRlc31tOiR7c2Vjb25kc31zYDtcbiAgcmV0dXJuIGxlbmd0aDtcbn07XG5cbmV4cG9ydCBjb25zdCBmb3JtYXRUaW1lID0gKHRpbWU6IG51bWJlcik6IHN0cmluZyA9PiB7XG4gIGNvbnN0IGhvdXJzID0gTWF0aC5mbG9vcih0aW1lIC8gMzYwMCk7XG4gIGNvbnN0IG1pbnV0ZXMgPSBNYXRoLmZsb29yKCh0aW1lICUgMzYwMCkgLyA2MCk7XG4gIGNvbnN0IHNlY29uZHMgPSB0aW1lICUgNjA7XG5cbiAgY29uc3QgZm9ybWF0dGVkSG91cnMgPSBTdHJpbmcoaG91cnMpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbiAgY29uc3QgZm9ybWF0dGVkTWludXRlcyA9IFN0cmluZyhtaW51dGVzKS5wYWRTdGFydCgyLCBcIjBcIik7XG4gIGNvbnN0IGZvcm1hdHRlZFNlY29uZHMgPSBTdHJpbmcoc2Vjb25kcykucGFkU3RhcnQoMiwgXCIwXCIpO1xuXG4gIHJldHVybiBgJHtmb3JtYXR0ZWRIb3Vyc306JHtmb3JtYXR0ZWRNaW51dGVzfToke2Zvcm1hdHRlZFNlY29uZHN9YDtcbn07XG5cbmV4cG9ydCBjb25zdCBjb252ZXJ0QXVkaW9Ub0Jsb2IgPSBhc3luYyAoZmlsZTogRmlsZSk6IFByb21pc2U8QmxvYj4gPT4ge1xuICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7XG5cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICByZWFkZXIub25sb2FkID0gKCkgPT4ge1xuICAgICAgY29uc3QgYXJyYXlCdWZmZXIgPSByZWFkZXIucmVzdWx0IGFzIEFycmF5QnVmZmVyO1xuICAgICAgY29uc3QgYXVkaW9CbG9iID0gbmV3IEJsb2IoW2FycmF5QnVmZmVyXSwgeyB0eXBlOiBmaWxlLnR5cGUgfSk7XG4gICAgICByZXNvbHZlKGF1ZGlvQmxvYik7XG4gICAgfTtcblxuICAgIHJlYWRlci5vbmVycm9yID0gcmVqZWN0O1xuICB9KTtcbn07XG4iXSwibmFtZXMiOlsicmFuZG9tUmFuZ2UiLCJzdGFydCIsImVuZCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImNhbGN1bGF0ZUxlbmd0aCIsInRpbWUiLCJ0aW1lU3RyIiwiZm9ybWF0VGltZSIsInNwbGl0IiwibWludXRlcyIsInNlY29uZHMiLCJsZW5ndGgiLCJob3VycyIsImZvcm1hdHRlZEhvdXJzIiwiU3RyaW5nIiwicGFkU3RhcnQiLCJmb3JtYXR0ZWRNaW51dGVzIiwiZm9ybWF0dGVkU2Vjb25kcyIsImNvbnZlcnRBdWRpb1RvQmxvYiIsImZpbGUiLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwicmVhZEFzQXJyYXlCdWZmZXIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIm9ubG9hZCIsImFycmF5QnVmZmVyIiwicmVzdWx0IiwiYXVkaW9CbG9iIiwiQmxvYiIsInR5cGUiLCJvbmVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/index.ts\n"));

/***/ })

});